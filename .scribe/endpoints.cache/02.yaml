## Autogenerated by Scribe. DO NOT MODIFY.

name: 'Managing Tasks by Category'
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: 'api/v1/categories/{category_id}/tasks'
    metadata:
      groupName: 'Managing Tasks by Category'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Get all tasks'
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_id:
        name: category_id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      category_id: 1
    queryParameters:
      sort:
        name: sort
        description: 'Data field(s) to sort by. Multiple fields can be specified by separating them with a comma. Denote descending sort with a minis (-) sign.'
        required: false
        example: 'sort=-created_at,title'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
      'filter[status]':
        name: 'filter[status]'
        description: 'Filter by status code: C: completed, D: Doing, P: Pending.'
        required: false
        example: null
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      'filter[title]':
        name: 'filter[title]'
        description: 'Filter by title. Wildcards ares supported.'
        required: false
        example: 'filter[title]=*test*'
        type: string
        enumValues: []
        exampleWasSpecified: true
        custom: []
    cleanQueryParameters:
      sort: 'sort=-created_at,title'
      'filter[title]': 'filter[title]=*test*'
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 401
        content: '{"message":"Unauthenticated."}'
        headers:
          cache-control: 'no-cache, private'
          content-type: application/json
          access-control-allow-origin: '*'
        description: null
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|bXi5PgoTb5n7JOvpuq4tcfqcWsA0PFAfNNRJl0G4efc6c621'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: 'api/v1/categories/{category_id}/tasks'
    metadata:
      groupName: 'Managing Tasks by Category'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Create a task'
      description: 'Creates a new task for the authenticated user.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_id:
        name: category_id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      category_id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data:
        name: data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes:
        name: data.attributes
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: "The task's title. Must not be greater than 255 characters."
        required: true
        example: 'Buy milk'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: "The task's description. Must not be greater than 500 characters."
        required: false
        example: 'Buy milk from the store'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: "The task's status."
        required: true
        example: P
        type: string
        enumValues:
          - C
          - D
          - P
        exampleWasSpecified: false
        custom: []
      data.attributes.due_date:
        name: data.attributes.due_date
        description: 'Must be a valid date.'
        required: false
        example: '2024-10-01T02:56:52'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.category.data:
        name: data.relationships.category.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.category:
        name: data.relationships.category
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.category.data.id:
        name: data.relationships.category.data.id
        description: 'The category associated with the task.'
        required: true
        example: 2
        type: integer
        enumValues:
          - null
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: 'Buy milk'
          description: 'Buy milk from the store'
          status: P
          due_date: '2024-10-01T02:56:52'
        relationships:
          category:
            data:
              id: 2
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
          "data": {
           "type": "task",
           "id": 602,
           "attributes": {
               "title": "Task test",
               "description": "Task description",
               "status": "P",
               "created_at": "2024-09-23T17:16:52.000000Z",
               "updated_at": "2024-09-23T17:16:52.000000Z"
           },
           "relationships": {
               "user": {
                   "data": {
                       "type": "user",
                       "id": 2
                   }
               },
               "category": {
                   "data": {
                       "type": "category",
                       "id": 1
                   }
               }
           },
           "links": {
               "self": "http://localhost/api/v1/tasks/602"
           },
          },
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|bXi5PgoTb5n7JOvpuq4tcfqcWsA0PFAfNNRJl0G4efc6c621'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: 'api/v1/categories/{category_id}/tasks/{id}'
    metadata:
      groupName: 'Managing Tasks by Category'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Show a task'
      description: 'Displays the specified task.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_id:
        name: category_id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: culpa
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      category_id: 1
      id: culpa
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
          "type": "task",
          "id": 5,
          "attributes": {
          "title": "quis repudiandae",
          "description": "Sed pariatur earum atque harum porro optio reprehenderit.",
          "status": "C",
          "created_at": "2024-09-15T18:43:54.000000Z",
          "updated_at": "2024-09-19T01:31:30.000000Z"
          },
          "relationships": {
          "user": {
          "data": {
          "type": "user",
          "id": 2
          }
          },
          "category": {
          "data": {
          "type": "category",
          "id": 5
          }
          }
          },
          "links": {
          "self": "http://localhost/api/v1/tasks/5"
          }
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|bXi5PgoTb5n7JOvpuq4tcfqcWsA0PFAfNNRJl0G4efc6c621'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
      - PATCH
    uri: 'api/v1/categories/{category_id}/tasks/{id}'
    metadata:
      groupName: 'Managing Tasks by Category'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a task'
      description: 'update the specified task.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_id:
        name: category_id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: laboriosam
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      category_id: 1
      id: laboriosam
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      data:
        name: data
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes:
        name: data.attributes
        description: ''
        required: true
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.category.data:
        name: data.relationships.category.data
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.category:
        name: data.relationships.category
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships:
        name: data.relationships
        description: ''
        required: false
        example: []
        type: object
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.relationships.category.data.id:
        name: data.relationships.category.data.id
        description: 'The category associated with the task.'
        required: false
        example: 2
        type: integer
        enumValues:
          - null
        exampleWasSpecified: false
        custom: []
      data.attributes.title:
        name: data.attributes.title
        description: "The task's title. Must not be greater than 255 characters."
        required: false
        example: 'Buy milk'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.description:
        name: data.attributes.description
        description: "The task's description. Must not be greater than 500 characters."
        required: false
        example: 'Buy milk from the store'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      data.attributes.status:
        name: data.attributes.status
        description: "The task's status."
        required: false
        example: P
        type: string
        enumValues:
          - C
          - D
          - P
        exampleWasSpecified: false
        custom: []
      data.attributes.due_date:
        name: data.attributes.due_date
        description: 'Must be a valid date.'
        required: false
        example: '2024-10-01T02:56:52'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      data:
        attributes:
          title: 'Buy milk'
          description: 'Buy milk from the store'
          status: P
          due_date: '2024-10-01T02:56:52'
        relationships:
          category:
            data:
              id: 2
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
           "type": "task",
           "id": 602,
           "attributes": {
               "title": "Task test updated",
               "description": "Task description updated",
               "status": "P",
               "created_at": "2024-09-23T17:16:52.000000Z",
               "updated_at": "2024-09-23T17:16:52.000000Z"
           },
           "relationships": {
               "user": {
                   "data": {
                       "type": "user",
                       "id": 2
                   }
               },
               "category": {
                   "data": {
                       "type": "category",
                       "id": 1
                   }
               }
           },
           "links": {
               "self": "http://localhost/api/v1/tasks/602"
           },
          },
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|bXi5PgoTb5n7JOvpuq4tcfqcWsA0PFAfNNRJl0G4efc6c621'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/v1/categories/{category_id}/tasks/{id}'
    metadata:
      groupName: 'Managing Tasks by Category'
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a task'
      description: 'Delete the specified task.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      category_id:
        name: category_id
        description: 'The ID of the category.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: false
        custom: []
      id:
        name: id
        description: 'The ID of the task.'
        required: true
        example: pariatur
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanUrlParameters:
      category_id: 1
      id: pariatur
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
              "data": [],
              "message": "Task deleted successfully",
              "status": 200
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|bXi5PgoTb5n7JOvpuq4tcfqcWsA0PFAfNNRJl0G4efc6c621'
    controller: null
    method: null
    route: null
    custom: []
