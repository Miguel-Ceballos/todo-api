name: Authentication
description: ''
endpoints:
  -
    httpMethods:
      - POST
    uri: api/login
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Login.
      description: "Authenticates the user and returns the user's token."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      email:
        name: email
        description: "The user's email. Must be a valid email address."
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: "The user's password."
        required: true
        example: no-example
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      email: john@example.com
      password: no-example
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
          "token": "{YOUR_AUTH_KEY}"
          },
          "message": "Authenticated",
          "status": 200
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/logout
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Logout.
      description: 'Signs out the user and destroys the API token.'
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: '{}'
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|bXi5PgoTb5n7JOvpuq4tcfqcWsA0PFAfNNRJl0G4efc6c621'
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/register
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: Register.
      description: "Register the user and returns the user's token."
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: "The user's name. Must be at least 3 characters. Must not be greater than 255 characters."
        required: true
        example: 'John Doe'
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      email:
        name: email
        description: "The user's email. Must be a valid email address."
        required: true
        example: john@example.com
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
      password:
        name: password
        description: "The user's password. Must be at least 8 characters."
        required: true
        example: no-example
        type: string
        enumValues: []
        exampleWasSpecified: false
        custom: []
    cleanBodyParameters:
      name: 'John Doe'
      email: john@example.com
      password: no-example
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
          "token": "{YOUR_AUTH_KEY}"
          },
          "message": "Authenticated",
          "status": 200
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - GET
    uri: api/user
    metadata:
      groupName: Authentication
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: User.
      description: ''
      authenticated: true
      custom: []
    headers:
      Authorization: 'Bearer {YOUR_AUTH_KEY}'
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
          "data": {
          "type": "user",
          "id": 2,
          "attributes": {
          "name": "User example",
          "email": "example@example.com",
          "emailVerifiedAt": null,
          "created_at": "2024-09-15T18:43:53.000000Z",
          "updated_at": "2024-09-15T18:43:53.000000Z"
          },
          "links": {
          "self": "http://localhost/api/user?2"
          }
          }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth:
      - headers
      - Authorization
      - 'Bearer 7|bXi5PgoTb5n7JOvpuq4tcfqcWsA0PFAfNNRJl0G4efc6c621'
    controller: null
    method: null
    route: null
    custom: []
